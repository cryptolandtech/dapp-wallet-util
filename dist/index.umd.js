!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.dappWalletUtil={})}(this,function(e){var t,n;!function(e){e.WALLET_READY="walletReady",e.WALLET_SCRIPT_INJECTED="scriptInjected",e.WALLET_GRANT_PERMISSION_RESPONSE="grantPermissionResponse",e.WALLET_GRANT_PERMISSION_REQUEST="grantPermissionRequest"}(t||(t={})),function(e){e.zilliqa="zilliqa",e.ethereum="ethereum"}(n||(n={}));var r,o,i={moonlet:{name:"Moonlet Wallet",supportedBlockchains:[n.zilliqa],instanceKey:"moonlet"}},a=function(e,t){var n=function(n){if(n.data.type===e&&"function"==typeof t)return t(n.data,n)};return window.addEventListener("message",n),function(){window.removeEventListener("message",n)}},s="https://cryptolandtech.github.io/dapp-wallet-util/",u=!1,c=0,l=[];a(t.WALLET_READY,function(e){e.walletId&&l.push(e.walletId)});var d=function(e){return void 0===e&&(e=!1),u?o:!r||e?(u=!0,o=new Promise(function(e){var t="wallet-bridge-iframe-"+Math.random().toString().substr(2),n=document.createElement("iframe");n.width="0",n.height="0",n.frameBorder="0",n.id=t,n.src=s,n.onload=function(){c=Date.now(),r=n,u=!1,e(n)},l=[],document.body.appendChild(n)})):Promise.resolve(r)},f=function(e){var t=l.map(function(e){return i[e]}).filter(Boolean);return e&&(t=t.filter(function(t){return t.supportedBlockchains.includes(e)})),t},E=function(e,t){void 0===t&&(t=3e3);try{return Promise.resolve(d()).then(function(){return c+t<=Date.now()?Promise.resolve(f(e)):new Promise(function(n){setTimeout(function(){n(f(e))},t)})})}catch(e){return Promise.reject(e)}},w=function(e){var t,n=i[e];return n&&window[n.instanceKey]&&(t=window[i[e].instanceKey]),t},T={sendWalletReadyEvent:function(e){window.parent.postMessage({type:t.WALLET_READY,walletId:e},"*")},sendScriptInjectedEvent:function(e,n){window.parent.postMessage({type:t.WALLET_SCRIPT_INJECTED,walletId:e},n||document.location.href)},onGrantPermissionRequest:function(e,n){if("function"!=typeof n)throw new Error("Callback should be a function.");return a(t.WALLET_GRANT_PERMISSION_REQUEST,function(t,r){t.walletId===e&&n(t,r)})},sendGrantPermissionResponse:function(e,n,r){window.parent.postMessage({type:t.WALLET_GRANT_PERMISSION_RESPONSE,walletId:e,response:n},r||"*")}};e.dapp={getWallets:E,getWalletInstance:function(e){try{if(!e)throw new Error("This feature is not yet supported...");if(e){if(i[e]){var n=w(e);return n?Promise.resolve(n):Promise.resolve(E()).then(function(){return l.indexOf(e)>=0?new Promise(function(n,r){try{return Promise.resolve(function(e){return new Promise(function(n){try{return Promise.resolve(d(!0)).then(function(r){r.contentWindow.postMessage({type:t.WALLET_GRANT_PERMISSION_REQUEST,walletId:e},s);var o=a(t.WALLET_GRANT_PERMISSION_RESPONSE,function(t){t.walletId&&t.walletId===e&&(clearTimeout(i),o(),n(!!t.response))}),i=setTimeout(function(){o(),n(!1)},3e4)})}catch(e){return Promise.reject(e)}})}(e)).then(function(o){o?n(function(e){var n=w(e);return n?Promise.resolve(n):new Promise(function(n,r){var o=a(t.WALLET_SCRIPT_INJECTED,function(t){if(t.walletId&&t.walletId===e){if(o(),clearTimeout(s),window[i[e].instanceKey])return n(window[i[e].instanceKey]);r("WALLET_INSTANCE_NOT_FOUND")}}),s=setTimeout(function(){o(),r("WALLET_SCRIPT_INJECT_TIMEOUT")},1e4)})}(e)):r("USER_DID_NOT_GRANT_PERMISSION")})}catch(e){return Promise.reject(e)}}):Promise.reject("WALLET_NOT_INSTALLED")})}return console.warn("Wallet with id: #{walletId} is not in whitelist. If you are a new wallet make a PR here: https://github.com/cryptolandtech/dapp-wallet-util"),Promise.reject("WALLET_ID_NOT_IN_WHITELIST")}return Promise.reject("WALLET_ID_NOT_PROVIDED")}catch(e){return Promise.reject(e)}}},e.wallet=T});
//# sourceMappingURL=index.umd.js.map
